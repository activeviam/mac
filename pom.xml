<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.activeviam.sandbox</groupId>
	<artifactId>monitoring-server</artifactId>
	<packaging>war</packaging>
	<version>5.8.0-SNAPSHOT</version>
	<name>ActivePivot Memory Analysis Cube</name>

	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<properties>
		<activepivot.version>  5.8.0-SNAPSHOT  </activepivot.version>
		<activeui.version>     4.2.8           </activeui.version>
		<tomcat.version>       8.5.23          </tomcat.version>

		<checkstyle.skip>true</checkstyle.skip>
		<codeClassifier>code</codeClassifier>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.activeviam.activepivot</groupId>
				<artifactId>activepivot-server</artifactId>
				<version>${activepivot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- ActivePivot Dependencies -->
		<dependency>
			<groupId>com.activeviam.activepivot</groupId>
			<artifactId>activepivot-server-spring</artifactId>
		</dependency>

		<!-- Composer dependencies are provided in QFS artifacts -->
		<!-- And must be explicitly declared in application projects -->
		<dependency>
			<groupId>com.activeviam.tech</groupId>
			<artifactId>composer-intf</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.activeviam.tech</groupId>
			<artifactId>composer-impl</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- The following artifact allows to expose the Rest API of the content
			service -->
		<dependency>
			<groupId>com.activeviam.tech</groupId>
			<artifactId>content-server-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.activeviam.web</groupId>
			<artifactId>activeviam-web-spring</artifactId>
		</dependency>

		<!-- Dependencies for the content service persistence -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
		</dependency>

		<!-- ActiveUI dependency -->
		<dependency>
			<groupId>com.activeviam.activeui</groupId>
			<artifactId>activeui</artifactId>
			<version>${activeui.version}</version>
		</dependency>

		<!-- Test dependencies -->

		<!-- Connection pool. Scope test to use import it only when using Jetty
			Server. Automatically provided when the application is deployed in a tomcat. -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>${tomcat.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.activeviam.activepivot</groupId>
			<artifactId>activepivot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-annotations</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- JDK 8 is required for the Sandbox Application -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>ISO-8859-15</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
                        <plugin>
                                <artifactId>maven-install-plugin</artifactId>
                                <version>2.4</version>
                                <!-- Do not contribute the resulting war to maven repository, as no one will use it -->
                                <configuration>
                                        <skip>true</skip>
                                </configuration>
                        </plugin>

                        <plugin>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>exec-maven-plugin</artifactId>
                                <version>1.6.0</version>
                                <executions>
                                        <execution>
                                                <goals>
                                                        <goal>java</goal>
                                                </goals>
                                                <id>serve</id>
                                                <configuration>
                                                        <mainClass>com.qfs.sandbox.server.MonitoringServer</mainClass>
                                                        <classpathScope>test</classpathScope>
                                                </configuration>
                                        </execution>
                                </executions>
                        </plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
