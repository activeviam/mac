<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <groupId>com.activeviam.tools</groupId>
  <artifactId>mac</artifactId>
  <version>5.9.0-SNAPSHOT</version>
  <name>ActivePivot Memory Analysis Cube</name>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <properties>
    <activepivot.version>5.9.0-SNAPSHOT</activepivot.version>
    <activeui.version>4.3.6-rc2</activeui.version>
    <tomcat.version>9.0.31</tomcat.version>

    <spring.boot.mainclass>com.activeviam.mac.app.MacSpringBootApp</spring.boot.mainclass>

    <checkstyle.maxAllowedViolations>0</checkstyle.maxAllowedViolations>
    <checkstyle.console>false</checkstyle.console>

    <!-- CLI args, meant to be overridden by each call -->
    <unsnappy.file>not-a-file.txt</unsnappy.file>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.activeviam.activepivot</groupId>
        <artifactId>activepivot-server</artifactId>
        <version>${activepivot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- ActivePivot Dependencies -->
    <dependency>
      <groupId>com.activeviam.activepivot</groupId>
      <artifactId>activepivot-server-spring</artifactId>
    </dependency>

    <!-- Composer dependencies are provided in QFS artifacts -->
    <!-- And must be explicitly declared in application projects -->
    <dependency>
      <groupId>com.activeviam.tech</groupId>
      <artifactId>composer-intf</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.activeviam.tech</groupId>
      <artifactId>composer-impl</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- The following artifact allows to expose the Rest API of the content
        service -->
    <dependency>
      <groupId>com.activeviam.tech</groupId>
      <artifactId>content-server-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>com.activeviam.web</groupId>
      <artifactId>activeviam-web-spring</artifactId>
    </dependency>

    <!-- Dependencies for the content service persistence -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
    </dependency>

    <!-- ActiveUI dependency -->
    <dependency>
      <groupId>com.activeviam.activeui</groupId>
      <artifactId>activeui</artifactId>
      <version>${activeui.version}</version>
    </dependency>

    <!-- SpringBoot dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.websocket</groupId>
      <artifactId>javax.websocket-client-api</artifactId>
      <version>1.1</version>
    </dependency>

    <!-- Connection pool. Scope test to use import it only when using Jetty
        Server. Automatically provided when the application is deployed in a tomcat. -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jdbc</artifactId>
      <version>${tomcat.version}</version>
    </dependency>

    <!-- Test dependencies -->

    <dependency>
      <groupId>com.activeviam.activepivot</groupId>
      <artifactId>activepivot-test</artifactId>
      <version>${activepivot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.activeviam.activepivot</groupId>
      <artifactId>activepivot-server-test</artifactId>
      <version>${activepivot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- JDK 8 is required for the Sandbox Application -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- SpringBoot plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>${spring.boot.mainclass}</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <!-- Do not contribute the resulting war to maven repository, as no one will use it -->
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>verify-doc</id>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <includeTestSourceDirectory>false</includeTestSourceDirectory>
              <violationSeverity>warning</violationSeverity>
              <checkstyleRules>
                <module name="Checker">
                  <property name="severity" value="warning"/>
                  <module name="TreeWalker">
                    <property name="fileExtensions" value="java"/>
                    <!-- Required for disabling comments, later in the rules -->
                    <module name="JavadocType">
                      <property name="scope" value="package"/>
                    </module>
                    <module name="JavadocMethod">
                      <property name="scope" value="protected"/>
                      <property name="validateThrows" value="true"/>
                      <property name="allowedAnnotations"
                        value="Override, Test, Before, BeforeClass, After, AfterClass"/>
                      <property name="allowThrowsTagsForSubclasses" value="true"/>
                    </module>
                    <module name="JavadocVariable">
                      <property name="scope" value="protected"/>
                      <property name="ignoreNamePattern" value="log|logger"/>
                    </module>
                  </module>
                </module>
              </checkstyleRules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>format-code</id>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
          <execution>
            <id>check-style</id>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <id>serve</id>
            <configuration>
              <mainClass>${spring.boot.mainclass}</mainClass>
              <classpathScope>test</classpathScope>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <id>unsnappy</id>
            <configuration>
              <mainClass>com.activeviam.mac.Tools</mainClass>
              <classpathScope>test</classpathScope>
              <arguments>
                <argument>extract</argument>
                <argument>${unsnappy.file}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
