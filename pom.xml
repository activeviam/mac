<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.8</version>
    <relativePath/>
  </parent>

  <groupId>com.activeviam.tools</groupId>
  <artifactId>mac</artifactId>
  <version>3.0.0-SNAPSHOT</version>
  <name>ActivePivot Memory Analysis Cube</name>

  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <properties>
    <jdk.version>11</jdk.version>

    <activepivot.version>6.0.6</activepivot.version>
    <activeui.version>5.1.5</activeui.version>

    <tomcat.version>9.0.31</tomcat.version>
    <lombok.version>1.18.18</lombok.version>

    <spring.boot.mainclass>com.activeviam.mac.app.MacSpringBootApp</spring.boot.mainclass>

    <!-- CLI args, meant to be overridden by each call -->
    <unsnappy.file>not-a-file.txt</unsnappy.file>

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.activeviam.activepivot</groupId>
        <artifactId>activepivot-server</artifactId>
        <version>${activepivot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- ActivePivot Dependencies -->
    <dependency>
      <groupId>com.activeviam.activepivot</groupId>
      <artifactId>activepivot-server-spring</artifactId>
    </dependency>

    <!-- Composer dependencies are provided in QFS artifacts -->
    <!-- And must be explicitly declared in application projects -->
    <dependency>
      <groupId>com.activeviam.tech</groupId>
      <artifactId>composer-intf</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.activeviam.tech</groupId>
      <artifactId>composer-impl</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- The following artifact allows to expose the Rest API of the content
        service -->
    <dependency>
      <groupId>com.activeviam.tech</groupId>
      <artifactId>content-server-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>com.activeviam.web</groupId>
      <artifactId>activeviam-web-spring</artifactId>
    </dependency>

    <!-- Dependencies for the content service persistence -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
    </dependency>

    <!-- ActiveUI dependency -->
    <dependency>
      <groupId>com.activeviam.activeui</groupId>
      <artifactId>activeui</artifactId>
      <version>${activeui.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- SpringBoot dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Connection pool. Scope test to use import it only when using Jetty
        Server. Automatically provided when the application is deployed in a tomcat. -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-jdbc</artifactId>
      <version>${tomcat.version}</version>
    </dependency>

    <!-- Test dependencies -->

    <dependency>
      <groupId>com.activeviam.activepivot</groupId>
      <artifactId>activepivot-test</artifactId>
      <version>${activepivot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.activeviam.activepivot</groupId>
      <artifactId>activepivot-server-test</artifactId>
      <version>${activepivot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>31.0.1-jre</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.5.2</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${jdk.version},)</version>
                </requireJavaVersion>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <release>${jdk.version}</release>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- SpringBoot plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>${spring.boot.mainclass}</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <!-- Do not contribute the resulting war to maven repository, as no one will use it -->
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <phase>none</phase>
            <id>format-code</id>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
          <execution>
            <id>check-style</id>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <displayFiles>true</displayFiles>
              <displayLimit>25</displayLimit>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <id>serve</id>
            <configuration>
              <mainClass>${spring.boot.mainclass}</mainClass>
              <classpathScope>test</classpathScope>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <id>unsnappy</id>
            <configuration>
              <mainClass>com.activeviam.mac.Tools</mainClass>
              <classpathScope>test</classpathScope>
              <arguments>
                <argument>extract</argument>
                <argument>${unsnappy.file}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.13</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-core</artifactId>
            <!-- The version has to be 1.4 otherwise mvn license:third-party-report
							will fail with java.lang.ClassNotFoundException: org.apache.maven.doxia.sink.render.RenderingContext -->
            <!-- see: https://github.com/mojohaus/license-maven-plugin/issues/73 -->
            <version>1.4</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>default-cli</id>
            <configuration>
              <excludedGroups>activeviam</excludedGroups>
              <excludedScopes>test</excludedScopes>
              <failIfWarning>true</failIfWarning>
              <fileTemplate>${project.basedir}/src/license/third-party-file.ftl</fileTemplate>
              <useMissingFile>true</useMissingFile>
              <licenseMerges>
                <licenseMerge>Apache License 2.0|ASL, version 2</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache 2</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache License V2.0</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache License v2.0</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache License, Version 2.0</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache License, version 2.0</licenseMerge>
                <licenseMerge>Apache License 2.0|The Apache License, Version 2.0</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache Software License - Version 2.0</licenseMerge>
                <licenseMerge>Apache License 2.0|Apache v2</licenseMerge>
                <licenseMerge>Apache License 2.0|The Apache Software License, Version 2.0</licenseMerge>
                <licenseMerge>BSD License|BSD</licenseMerge>
                <licenseMerge>BSD License|The BSD License</licenseMerge>
                <licenseMerge>Common Development and Distribution License 1.0|Common Development and Distribution License</licenseMerge>
                <licenseMerge>Common Development and Distribution License 1.0|Common Development and Distribution License (CDDL) v1.0</licenseMerge>
                <licenseMerge>Eclipse Public License 1.0|Eclipse Public License - Version 1.0</licenseMerge>
                <licenseMerge>Eclipse Public License 1.0|Eclipse Public License (EPL), Version 1.0</licenseMerge>
                <licenseMerge>GPL2 w/ CPE|GNU General Public License, Version 2 with the Classpath Exception</licenseMerge>
                <licenseMerge>LGPL 2.1|LGPL, version 2.1</licenseMerge>
                <licenseMerge>LGPL 2.1|GNU Lesser General Public License 2.1</licenseMerge>
                <licenseMerge>MIT License|The MIT License</licenseMerge>
              </licenseMerges>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
