version: 2.1

parameters:
  head_ref:
    type: string
    default: NONE
  base_ref:
    type: string
    default: NONE
  run_sonar:
    type: boolean
    default: false
  run_compatibility:
    type: boolean
    default: false
executors:
  jdk11-docker:
    docker:
      - image: circleci/openjdk:11-jdk-node
    environment:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
  vm:
    environment:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

jobs:
  build_and_test:
    executor: vm
    resource_class: large
    working_directory: ~/mac
    steps:
      - checkout
      - restore_cache:
          keys:
            - mac-java-{{ .Branch }}-{{ checksum "pom.xml" }}
            - mac-java-{{ .Branch }}-
            - mac-java-
      - run:
          name: "Build and test"
          command: |
            sudo sysctl -w vm.overcommit_memory=1
            mkdir -p "$HOME/.m2/repository"
            docker run --rm --privileged \
              -e ACTIVEPIVOT_LICENSE -e ARTIFACTORY_USER -e ARTIFACTORY_PASSWORD \
              -v "$HOME/.m2/repository:/tmp/repository" \
              -v "$PWD:/home/circleci/mac" \
              -w /home/circleci/mac -u root \
              circleci/openjdk:11-jdk-node-browsers \
              mvn package --settings .circleci/circleci-settings.xml -Dmaven.repo.local=/tmp/repository
      - save_cache:
          paths: [ ~/.m2/repository ]
          key: mac-java-{{ .Branch }}-{{ checksum "pom.xml" }}

  launch_compatibility_checks:
    executor: vm
    resource_class: medium
    steps:
      - unless:
          condition: <<pipeline.parameters.run_compatibility>>
          steps:
             - run:
                name: Fail if no compatibility enabled
                command: exit 1
      - when:
          condition: <<pipeline.parameters.run_compatibility>>
          steps:
            - run:
                name: Succeed if compatibility enabled
                command: exit 0
  execute_compatibility_checks:
    executor: vm
    resource_class: large
    working_directory: ~/mac
    parameters:
      ap-version:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - mac-java-{{ .Branch }}-{{ checksum "pom.xml" }}
            - mac-java-{{ .Branch }}-
            - mac-java-
      - run:
          name: "Run matrix checks"
          command: |
            sudo sysctl -w vm.overcommit_memory=1
            bash ./scripts/sandboxGenerator.sh << parameters.ap-version >> https://activeviam.jfrog.io/artifactory/activepivot-mvn-nightly
        # TODO : Provide the url as a secret
      - store_artifacts:
          path: ./logs
workflows:
  version: 2
  check:
    jobs:
      - build_and_test:
          context: rnd-server
      - launch_compatibility_checks:
          context: rnd-server
          requires:
            - build_and_test
      - execute_compatibility_checks:
          matrix:
            parameters:
              ap-version: ["6.0.0","5.11.5"]
          context: rnd-server
          requires:
            - launch_compatibility_checks
